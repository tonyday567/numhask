on: [push]
name: haskell-ci
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.8.4', '8.10.7']
        cabal: ['3.6.2.0']
        os: [ubuntu-latest, macOS-latest]
        experimental: [false]
        include:
          - os: windows-latest
            ghc: '8.10.7'
            experimental: true
        include:
          - os: ubuntu-latest
            ghc: '9.2.1'
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    name: ghc ${{ matrix.ghc }} ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Haskell
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - if: ${{ matrix.os != 'windows-latest'}}
        name: Set linux/macOS paths
        run: |
          echo "CABAL_STORE_DIR=~/.cabal/store" >> $GITHUB_ENV
          echo "CABAL_PKGS_DIR=~/.cabal/packages" >> $GITHUB_ENV
      - name: cabal configure
        run: |
          cabal configure --enable-tests --write-ghc-environment-files=always --test-show-details=direct
      - if: ${{ matrix.os != 'windows-latest'}}
        name: cabal cache (non-windows)
        uses: actions/cache@v2
        env:
          cache-name: cache-cabal
        with:
          path: |
            ${{ env.CABAL_PKGS_DIR }}
            ${{ env.CABAL_STORE_DIR }}
          key: ${{ matrix.os }}-${{ matrix.ghc }}-build-${{ hashFiles('cabal.project') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.ghc }}-bench-${{ hashFiles('cabal.project') }}
            ${{ matrix.os }}-${{ matrix.ghc }}-build-
            ${{ matrix.os }}-${{ matrix.ghc }}
      - if: ${{ matrix.os == 'windows-latest'}}
        name: Print versions (windows)
        run: |
          [Environment]::GetEnvironmentVariable("Path")
          cabal --version
          ghc --version
          cabal user-config init -a "http-transport: plain-http" -a "store-dir: C:\SR" -f -v3
      - if: ${{ matrix.os == 'windows-latest'}}
        name: restore cabal cache (windows)
        uses: actions/cache@v1
        with:
          path: C:\SR
          key: windows-store-meta
      - name: build
        run: |
          cabal build all --enable-tests --write-ghc-environment-files=always
      - name: test
        run: |
          cabal test all --enable-tests --write-ghc-environment-files=always
      - name: haddock
        run: |
          cabal haddock all
      - name: cabal check & sdist
        run: |
          cabal -vnormal check
          cabal sdist all
